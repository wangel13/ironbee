// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

enum Role {
  USER
  ADMIN
}

model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  role             Role      @default(USER)
  password         String
  firstName        String?
  secondName       String?
  patronymic       String?
  organizationName String?
  organizationInn  String?
  // organizationIndustry String
  country          String?
  city             String?
  position         String?
  projects         Project[]
}

model LegalForm {
  id            Int       @id @default(autoincrement())
  name          String    @unique
  usnBuhAvgCost Int
  osnBuhAvgCost Int
  // Гос. пошлина
  stateDuty     Int
  project       Project[]
}

model Project {
  id                   Int                   @id @default(autoincrement())
  author               User                  @relation(fields: [authorId], references: [id])
  authorId             Int
  minCost              Int
  maxCost              Int
  workers              Int
  years                Int                   @default(1)
  areaBuildingSize     Int
  legalForm            LegalForm             @relation(fields: [legalFormId], references: [id])
  legalFormId          Int
  // Toggle
  usn                  Boolean
  // 80-120 тыс. р. м2
  costAreaBuildingSize Int
  areaRentalSize       Int
  patent               Patent[]
  area                 Area?                 @relation(fields: [areaId], references: [id])
  areaId               Int?
  industry             Industry?             @relation(fields: [industryId], references: [id])
  industryId           Int?
  projectsOnEquipment  ProjectsOnEquipment[]
}

model ProjectsOnEquipment {
  project     Project   @relation(fields: [projectId], references: [id])
  projectId   Int
  equipment   Equipment @relation(fields: [equipmentId], references: [id])
  equipmentId Int
  assignedAt  DateTime  @default(now())
  assignedBy  String
  count       Int

  @@id([projectId, equipmentId])
}

model Industry {
  id                Int       @id @default(autoincrement())
  name              String
  // среднее количество рабочих в предприятии отрасли
  avgWorkers        Int
  // Средняя зп
  avgSalary         Int
  // Средние налоги
  avgTaxes          Int
  // Налоги на прибыль
  avgIncomeTaxes    Int
  // Налоги на собственность
  avgPropertyTaxes  Int
  // Налоги на землю
  avgLandTaxes      Int
  // НДФЛ
  avgNDFL           Int
  // Транспортные налоги
  avgTransportTaxes Int
  // Другие налоги
  avgOtherTaxes     Int
  Project           Project[]
}

// Оборудование
model Equipment {
  id                  Int                   @id @default(autoincrement())
  name                String
  avgCost             Int
  projectsOnEquipment ProjectsOnEquipment[]
}

model Area {
  id      Int       @id @default(autoincrement())
  name    String
  // Средняя стоимость 1кв.м.
  avgCost Int
  project Project[]
}

model Patent {
  id        Int      @id @default(autoincrement())
  name      String
  // Потенциально возможный к получению годовой доход (тыс. рублей)
  income    Int
  // Ставка
  rate      Int
  // cost = income*rate
  cost      Int
  project   Project[]
}
